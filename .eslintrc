{
  "parser": "babel-eslint",
  "env": {
    "es6": true,
    "browser": true,
    "jasmine": true,
    "node": true,
    "mocha": true
  },
  "ecmaFeatures": {
    "jsx": true,
    "spread": true,
    "experimentalObjectRestSpread": true,
    "arrowFunctions": true,
    "blockBindings": true,
    "generators": true
  },
  "plugins": [
    "react"
  ],
  "rules": {
    "quotes": [2, "single"],
    "react/jsx-boolean-value": 0,
    "jsx-quotes": 1,
    "react/jsx-no-undef": 1,
    "react/jsx-uses-react": 1,
    "react/jsx-uses-vars": 1,
    "comma-dangle": 2,
    "no-cond-assign": 0,
    "no-console": 1,
    "no-constant-condition": 0,
    "no-control-regex": 0,
    "no-debugger": 0,
    "no-dupe-keys": 0,
    "no-empty": 1,
    "no-empty-class": 0,
    "no-ex-assign": 2,
    "no-extra-boolean-cast": 0,
    "no-extra-semi": 2,
    "no-func-assign": 1,
    "no-inner-declarations": 0,
    "no-invalid-regexp": 0,
    "no-irregular-whitespace": 1,
    "no-negated-in-lhs": 0,
    "no-obj-calls": 0,                // disallow the use of object properties of the global object (Math and JSON) as functions
    "no-regex-spaces": 1,             // disallow multiple spaces in a regular expression literal
    "no-reserved-keys": 0,            // disallow reserved words being used as object literal keys (off by default)
    "no-sparse-arrays": 0,            // disallow sparse arrays
    "no-unreachable": 2,              // disallow unreachable statements after a return, throw, continue, or break statement
    "use-isnan": 0,                   // disallow comparisons with the value NaN
    "valid-jsdoc": 0,                 // Ensure JSDoc comments are valid (off by default)
    "valid-typeof": 1,                // Ensure that the results of typeof are compared against a valid string
    "consistent-return": 0,           // require return statements to either always or never specify values
    "curly": 0,                       // specify curly brace conventions for all control statements
    "default-case": 1,                // require default case in switch statements (off by default)
    "eqeqeq": 1,                      // disallow usage of __proto__ property
    "no-redeclare": 2,                // require or disallow Yoda conditions
    "no-catch-shadow": 0,             // disallow the catch clause parameter name being the same as a variable in the outer scope (off by default in the node environment)
    "no-delete-var": 0,               // disallow deletion of variables
    "no-label-var": 0,                // disallow labels that share a name with a variable
    "no-shadow": 0,                   // disallow declaration of variables already declared in the outer scope
    "no-shadow-restricted-names": 0,  // disallow shadowing of names such as arguments
    "no-undef": 0,                    // disallow use of undeclared variables unless mentioned in a /*global */ block
    "no-undef-init": 0,               // disallow use of undefined when initializing variables
    "no-undefined": 0,                // disallow use of undefined variable (off by default)
    "no-unused-vars": 0,              // disallow declaration of variables that are not used in the code
    "no-use-before-define": 0,        // disallow use of variables before they are defined
    "key-spacing": 1,                 // enforces spacing between keys and values in object literal properties
    "new-cap": 2,                     // require a capital letter for constructors
    "new-parens": 2,                  // disallow the omission of parentheses when invoking a constructor with no arguments
    "semi-spacing": 2,
    "no-trailing-spaces": 2,          // disallow trailing whitespace at the end of lines
    "no-underscore-dangle": 2,        // disallow dangling underscores in identifiers
    "no-var": 2,                      // require let or const instead of var (off by default)
    "generator-star": 0               // enforce the position of the * in generator functions (off by default)
  }
}
